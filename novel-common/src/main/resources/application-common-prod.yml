spring:
  profiles:
    include: [common]
  main:
    allow-bean-definition-overriding: true
  #Redis服务器IP
  redis:
    host: 127.0.0.1
    #Redis服务器连接端口
    port: 6379
    #Redis服务器连接密码
    password: Songanwei1004.
    jedis:
      pool:
        #连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 1
        #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8
        #连接池中的最小空闲连接
        min-idle: 0
    #连接超时时间（毫秒）
    timeout: 30000
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/novel_plus?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: root
    password: Songanwei1004.
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      data-source-properties:
        setIdleTimeout: 60000
        setConnectionTimeout: 60000
        setValidationTimeout: 3000
        setLoginTimeout: 5
        setMaxLifetime: 60000
#      客户端（即您）等待来自池的连接的最大毫秒数
      connection-timeout: 60000
      #此属性控制允许连接在池中保持空闲状态的最长时间
      idle-timeout: 600000
      #此属性控制池中连接的最大生存期。使用中的连接永远不会停止使用，只有在关闭连接后才将其删除
      max-lifetime: 28740000
      #以验证与数据库的连接仍然有效
      connection-test-query: SELECT 1
      #此属性控制允许池达到的最大大小，包括空闲和使用中的连接。基本上，此值将确定到数据库后端的最大实际连接数。
      maximum-pool-size: 500
      validation-timeout: 1000
      login-timeout: 5
      #此属性控制默认情况下从池获得的连接是否处于只读模式
      read-only: false


####使用shardingJdbc时，
####所有的jdbcType都不能是LONGVARCHAR,否则会导致java.io.NotSerializableException: java.io.StringReader错误
##### 应该替换所有的 LONGVARCHAR 类型为VARCHAR

sharding:
  jdbc:
    datasource:
      names: ds0 #,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/novel_plus?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: Songanwei1004.
        hikari:
          data-source-properties:
            setIdleTimeout: 60000
            setConnectionTimeout: 60000
            setValidationTimeout: 3000
            setLoginTimeout: 5
            setMaxLifetime: 60000
          #      客户端（即您）等待来自池的连接的最大毫秒数
          connection-timeout: 60000
          #此属性控制允许连接在池中保持空闲状态的最长时间
          idle-timeout: 600000
          #此属性控制池中连接的最大生存期。使用中的连接永远不会停止使用，只有在关闭连接后才将其删除
          max-lifetime: 28740000
          #以验证与数据库的连接仍然有效
          connection-test-query: SELECT 1
          #此属性控制允许池达到的最大大小，包括空闲和使用中的连接。基本上，此值将确定到数据库后端的最大实际连接数。
          maximum-pool-size: 500
          validation-timeout: 3000
          login-timeout: 5
          #此属性控制默认情况下从池获得的连接是否处于只读模式
          read-only: false
    #      ds1:
    #        type: com.alibaba.druid.pool.DruidDataSource
    #        driver-class-name: com.mysql.jdbc.Driver
    #        url: jdbc:mysql://localhost:3306/novel_plus2
    #        username: root
    #        password: test123456
    config:
      sharding:
        props:
          sql.show: true
        tables:
          book_content:  #book_content表
            key-generator-column-name: id  #主键
            actual-data-nodes: ds${0}.book_content${0..9}  #数据节点
            #            database-strategy:  #分库策略
            #              inline:
            #                sharding-column: book_id
            #                algorithm-expression: ds${book_id % 10}
            table-strategy:  #分表策略
              inline:
                shardingColumn: index_id
                algorithm-expression: book_content${index_id % 10}


logging:
  level:
    root: error
    com.java2nb: info



content:
  save:
    storage: b2 #存储介质，db：数据库，file：txt文本 ,b2存储
    path: /tmp/upload/xs6org/books  #txt小说文本保存路径
    b2path: /tmp/upload/xs6org/b2/books  #b2小说文本保存路径  缓存10天
    b2_app_key_id: cb8caf51444c
    b2_app_key: 004fcbb2d7da293c7b6ab7b7fd0aace0f82f9a0c39
    b2_app_bucket_name: xs6org
    b2_cacheSize: 10000 #缓存多个章小说





